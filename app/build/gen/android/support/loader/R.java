/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package android.support.loader;

public final class R {
    public static final class anim {
        public static final int hold=0x7f040000;
        public static final int menu_background_invisible=0x7f040001;
        public static final int menu_background_visible=0x7f040002;
        public static final int menu_invisible=0x7f040003;
        public static final int menu_visible=0x7f040004;
        public static final int player_activity_exit=0x7f040005;
        public static final int player_activity_start=0x7f040006;
        public static final int playlist_invisible=0x7f040007;
        public static final int playlist_visible=0x7f040008;
    }
    public static final class attr {
        /**  Alpha multiplier applied to the base color. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alpha=0x7f010000;
        /**  The reference to the font file to be used. This should be a file in the res/font folder
         and should therefore have an R reference value. E.g. @font/myfont 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int font=0x7f010008;
        /**  The authority of the Font Provider to be used for the request. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontProviderAuthority=0x7f010001;
        /**  The sets of hashes for the certificates the provider should be signed with. This is
        used to verify the identity of the provider, and is only required if the provider is not
        part of the system image. This value may point to one list or a list of lists, where each
        individual list represents one collection of signature hashes. Refer to your font provider's
        documentation for these values. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fontProviderCerts=0x7f010004;
        /**  The strategy to be used when fetching font data from a font provider in XML layouts.
        This attribute is ignored when the resource is loaded from code, as it is equivalent to the
        choice of API between {@link
    androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
        {@link
    androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
        (async). 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>blocking</code></td><td>0</td><td> The blocking font fetch works as follows.
              First, check the local cache, then if the requested font is not cached, request the
              font from the provider and wait until it is finished.  You can change the length of
              the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
              default typeface will be used instead. </td></tr>
<tr><td><code>async</code></td><td>1</td><td> The async font fetch works as follows.
              First, check the local cache, then if the requeted font is not cached, trigger a
              request the font and continue with layout inflation. Once the font fetch succeeds, the
              target text view will be refreshed with the downloaded font data. The
              fontProviderFetchTimeout will be ignored if async loading is specified. </td></tr>
</table>
         */
        public static final int fontProviderFetchStrategy=0x7f010005;
        /**  The length of the timeout during fetching. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>forever</code></td><td>-1</td><td> A special value for the timeout. In this case, the blocking font fetching will not
              timeout and wait until a reply is received from the font provider. </td></tr>
</table>
         */
        public static final int fontProviderFetchTimeout=0x7f010006;
        /**  The package for the Font Provider to be used for the request. This is used to verify
        the identity of the provider. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontProviderPackage=0x7f010002;
        /**  The query to be sent over to the provider. Refer to your font provider's documentation
        on the format of this string. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontProviderQuery=0x7f010003;
        /**  The style of the given font file. This will be used when the font is being loaded into
         the font stack and will override any style information in the font's header tables. If
         unspecified, the value in the font's header tables will be used. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>italic</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int fontStyle=0x7f010007;
        /**  The variation settings to be applied to the font. The string should be in the following
         format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
         used, or the font used does not support variation settings, this attribute needs not be
         specified. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontVariationSettings=0x7f01000a;
        /**  The weight of the given font file. This will be used when the font is being loaded into
         the font stack and will override any weight information in the font's header tables. Must
         be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
         common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
         in the font's header tables will be used. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fontWeight=0x7f010009;
        /**  The index of the font in the tcc font file. If the font file referenced is not in the
        tcc format, this attribute needs not be specified. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ttcIndex=0x7f01000b;
    }
    public static final class color {
        public static final int artist_color=0x7f06000c;
        public static final int background_color=0x7f060007;
        public static final int background_color_alpha=0x7f060008;
        public static final int background_color_dark=0x7f060009;
        public static final int notification_action_color_filter=0x7f060003;
        public static final int notification_color=0x7f06000a;
        public static final int notification_icon_bg_color=0x7f060004;
        public static final int notification_material_background_media_default_color=0x7f060000;
        public static final int primary_text_default_material_dark=0x7f060001;
        public static final int ripple_material_light=0x7f060005;
        public static final int secondary_text_default_material_dark=0x7f060002;
        public static final int secondary_text_default_material_light=0x7f060006;
        public static final int title_color=0x7f06000b;
    }
    public static final class dimen {
        public static final int compat_button_inset_horizontal_material=0x7f070008;
        public static final int compat_button_inset_vertical_material=0x7f070009;
        public static final int compat_button_padding_horizontal_material=0x7f07000a;
        public static final int compat_button_padding_vertical_material=0x7f07000b;
        public static final int compat_control_corner_material=0x7f07000c;
        public static final int compat_notification_large_icon_max_height=0x7f07000d;
        public static final int compat_notification_large_icon_max_width=0x7f07000e;
        public static final int menu_icon_size=0x7f07001e;
        public static final int menu_icon_size_land=0x7f07001f;
        public static final int notification_action_icon_size=0x7f07000f;
        public static final int notification_action_text_size=0x7f070010;
        public static final int notification_big_circle_margin=0x7f070011;
        public static final int notification_content_margin_start=0x7f070005;
        public static final int notification_large_icon_height=0x7f070012;
        public static final int notification_large_icon_width=0x7f070013;
        public static final int notification_main_column_padding_top=0x7f070006;
        public static final int notification_media_narrow_margin=0x7f070007;
        public static final int notification_right_icon_size=0x7f070014;
        public static final int notification_right_side_padding_top=0x7f070004;
        public static final int notification_small_icon_background_padding=0x7f070015;
        public static final int notification_small_icon_size_as_large=0x7f070016;
        public static final int notification_subtext_size=0x7f070017;
        public static final int notification_top_pad=0x7f070018;
        public static final int notification_top_pad_large_text=0x7f070019;
        public static final int open_menu_size=0x7f07001c;
        public static final int open_menu_size_land=0x7f07001d;
        public static final int player_invisible_padding=0x7f07001b;
        public static final int player_visible_padding=0x7f07001a;
        public static final int subtitle_corner_radius=0x7f070000;
        public static final int subtitle_outline_width=0x7f070001;
        public static final int subtitle_shadow_offset=0x7f070002;
        public static final int subtitle_shadow_radius=0x7f070003;
    }
    public static final class drawable {
        public static final int actionbar_background=0x7f020000;
        public static final int button_background=0x7f020001;
        public static final int button_background_2=0x7f020002;
        public static final int circle_button_background=0x7f020003;
        public static final int circle_button_background_2=0x7f020004;
        public static final int circle_button_background_3=0x7f020005;
        public static final int empty_cover=0x7f020006;
        public static final int ic_arrow_drop_down=0x7f020007;
        public static final int ic_arrow_drop_up=0x7f020008;
        public static final int ic_book_open=0x7f020009;
        public static final int ic_bookmark_music=0x7f02000a;
        public static final int ic_close=0x7f02000b;
        public static final int ic_close_b=0x7f02000c;
        public static final int ic_fast_forward=0x7f02000d;
        public static final int ic_folder=0x7f02000e;
        public static final int ic_magnify_b=0x7f02000f;
        public static final int ic_menu=0x7f020010;
        public static final int ic_music_box_outline=0x7f020011;
        public static final int ic_no_repeat=0x7f020012;
        public static final int ic_pause=0x7f020013;
        public static final int ic_play=0x7f020014;
        public static final int ic_repeat=0x7f020015;
        public static final int ic_rewind=0x7f020016;
        public static final int ic_volume_high=0x7f020017;
        public static final int icon=0x7f020018;
        public static final int item_background=0x7f020019;
        public static final int item_background_touch=0x7f02001a;
        public static final int list_item_background=0x7f02001b;
        public static final int menu_button_background=0x7f02001c;
        public static final int menu_list_background=0x7f02001d;
        public static final int mp_icon=0x7f02001e;
        public static final int notification_action_background=0x7f02001f;
        public static final int notification_bg=0x7f020020;
        public static final int notification_bg_low=0x7f020021;
        public static final int notification_bg_low_normal=0x7f020022;
        public static final int notification_bg_low_pressed=0x7f020023;
        public static final int notification_bg_normal=0x7f020024;
        public static final int notification_bg_normal_pressed=0x7f020025;
        public static final int notification_exit_button=0x7f020026;
        public static final int notification_fast_forward_button=0x7f020027;
        public static final int notification_icon_background=0x7f020028;
        public static final int notification_no_repeat_button=0x7f020029;
        public static final int notification_pause_button=0x7f02002a;
        public static final int notification_play_button=0x7f02002b;
        public static final int notification_repeat_button=0x7f02002c;
        public static final int notification_rewind_button=0x7f02002d;
        public static final int notification_template_icon_bg=0x7f020032;
        public static final int notification_template_icon_low_bg=0x7f020033;
        public static final int notification_tile_bg=0x7f02002e;
        public static final int notify_panel_notification_icon_bg=0x7f02002f;
        public static final int playlist_current_item_background=0x7f020030;
        public static final int playlist_item_background=0x7f020031;
    }
    public static final class id {
        public static final int action0=0x7f0a0039;
        public static final int action_container=0x7f0a0036;
        public static final int action_divider=0x7f0a003d;
        public static final int action_image=0x7f0a0037;
        public static final int action_text=0x7f0a0038;
        public static final int actions=0x7f0a0047;
        public static final int artist=0x7f0a0033;
        public static final int async=0x7f0a0008;
        public static final int big_player_artist=0x7f0a000e;
        public static final int big_player_cover=0x7f0a000f;
        public static final int big_player_loop=0x7f0a0017;
        public static final int big_player_next=0x7f0a0014;
        public static final int big_player_play_pause=0x7f0a0013;
        public static final int big_player_previous=0x7f0a0012;
        public static final int big_player_progress=0x7f0a0010;
        public static final int big_player_seekbar=0x7f0a0011;
        public static final int big_player_title=0x7f0a000d;
        public static final int big_player_volume=0x7f0a0016;
        public static final int big_player_volume_seekbar=0x7f0a0015;
        public static final int blocking=0x7f0a0009;
        public static final int cancel_action=0x7f0a003a;
        public static final int chronometer=0x7f0a0042;
        public static final int disable_menu=0x7f0a0032;
        public static final int duration=0x7f0a0035;
        public static final int end_padder=0x7f0a0049;
        public static final int folder_list=0x7f0a002e;
        public static final int forever=0x7f0a000a;
        public static final int icon=0x7f0a0044;
        public static final int icon_group=0x7f0a0048;
        public static final int info=0x7f0a0043;
        public static final int italic=0x7f0a000b;
        public static final int library_list=0x7f0a002f;
        public static final int line1=0x7f0a0000;
        public static final int line3=0x7f0a0001;
        public static final int list=0x7f0a001d;
        public static final int loading=0x7f0a0020;
        public static final int media_actions=0x7f0a003c;
        public static final int mediadb_list=0x7f0a0030;
        public static final int menu=0x7f0a002c;
        public static final int menu_background_layout=0x7f0a002b;
        public static final int name=0x7f0a001c;
        public static final int normal=0x7f0a000c;
        public static final int notification_background=0x7f0a0046;
        public static final int notification_main_column=0x7f0a003f;
        public static final int notification_main_column_container=0x7f0a003e;
        public static final int open_menu=0x7f0a002a;
        public static final int open_playlist=0x7f0a0018;
        public static final int parent=0x7f0a0034;
        public static final int permission_layout=0x7f0a001e;
        public static final int playList_background=0x7f0a0019;
        public static final int playList_listview=0x7f0a001a;
        public static final int player=0x7f0a0025;
        public static final int player_button=0x7f0a0027;
        public static final int player_thumbnail=0x7f0a0026;
        public static final int player_title=0x7f0a0028;
        public static final int player_touch=0x7f0a0029;
        public static final int playlist_list=0x7f0a0031;
        public static final int playlist_thumbnail=0x7f0a004a;
        public static final int playlist_title=0x7f0a004b;
        public static final int request_permission=0x7f0a001f;
        public static final int right_icon=0x7f0a0045;
        public static final int right_side=0x7f0a0040;
        public static final int search_list=0x7f0a002d;
        public static final int searchitem_background=0x7f0a0021;
        public static final int searchitem_close=0x7f0a0022;
        public static final int searchitem_down=0x7f0a0024;
        public static final int searchitem_up=0x7f0a0023;
        public static final int status_bar_latest_event_content=0x7f0a003b;
        public static final int tag_transition_group=0x7f0a0002;
        public static final int tag_unhandled_key_event_manager=0x7f0a0003;
        public static final int tag_unhandled_key_listeners=0x7f0a0004;
        public static final int text=0x7f0a0005;
        public static final int text2=0x7f0a0006;
        public static final int thumbnail=0x7f0a001b;
        public static final int time=0x7f0a0041;
        public static final int title=0x7f0a0007;
    }
    public static final class integer {
        public static final int cancel_button_image_alpha=0x7f080000;
        public static final int menu_animation_duration=0x7f080002;
        public static final int status_bar_notification_info_maxnum=0x7f080001;
    }
    public static final class layout {
        public static final int big_player_layout=0x7f030000;
        public static final int folder_item_layout=0x7f030001;
        public static final int main=0x7f030002;
        public static final int music_item_layout=0x7f030003;
        public static final int notification_action=0x7f030004;
        public static final int notification_action_tombstone=0x7f030005;
        public static final int notification_media_action=0x7f030006;
        public static final int notification_media_cancel_action=0x7f030007;
        public static final int notification_template_big_media=0x7f030008;
        public static final int notification_template_big_media_custom=0x7f030009;
        public static final int notification_template_big_media_narrow=0x7f03000a;
        public static final int notification_template_big_media_narrow_custom=0x7f03000b;
        public static final int notification_template_custom_big=0x7f03000c;
        public static final int notification_template_icon_group=0x7f03000d;
        public static final int notification_template_lines_media=0x7f03000e;
        public static final int notification_template_media=0x7f03000f;
        public static final int notification_template_media_custom=0x7f030010;
        public static final int notification_template_part_chronometer=0x7f030011;
        public static final int notification_template_part_time=0x7f030012;
        public static final int playlist_item_layout=0x7f030013;
    }
    public static final class string {
        public static final int app_name=0x7f090001;
        public static final int cancel=0x7f090004;
        public static final int ok=0x7f090005;
        public static final int request_permission=0x7f090002;
        public static final int request_permission_description=0x7f090003;
        public static final int search_hint=0x7f090008;
        public static final int search_message=0x7f090007;
        public static final int search_title=0x7f090006;
        public static final int status_bar_notification_info_overflow=0x7f090000;
    }
    public static final class style {
        public static final int AppTheme=0x7f05000c;
        public static final int MyActionBar=0x7f05000d;
        public static final int MyActionBarTitleText=0x7f05000e;
        public static final int TextAppearance_Compat_Notification=0x7f050005;
        public static final int TextAppearance_Compat_Notification_Info=0x7f050006;
        public static final int TextAppearance_Compat_Notification_Info_Media=0x7f050000;
        public static final int TextAppearance_Compat_Notification_Line2=0x7f05000b;
        public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f050004;
        public static final int TextAppearance_Compat_Notification_Media=0x7f050001;
        public static final int TextAppearance_Compat_Notification_Time=0x7f050007;
        public static final int TextAppearance_Compat_Notification_Time_Media=0x7f050002;
        public static final int TextAppearance_Compat_Notification_Title=0x7f050008;
        public static final int TextAppearance_Compat_Notification_Title_Media=0x7f050003;
        public static final int Widget_Compat_NotificationActionContainer=0x7f050009;
        public static final int Widget_Compat_NotificationActionText=0x7f05000a;
    }
    public static final class styleable {
        /** Attributes that can be used with a ColorStateListItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ColorStateListItem_alpha com.lllslll.blueplayer_mk2:alpha}</code></td><td> Alpha multiplier applied to the base color.</td></tr>
           <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
           <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td> Base color for this state.</td></tr>
           </table>
           @see #ColorStateListItem_alpha
           @see #ColorStateListItem_android_alpha
           @see #ColorStateListItem_android_color
         */
        public static final int[] ColorStateListItem = {
            0x010101a5, 0x0101031f, 0x7f010000
        };
        /**
          <p>
          @attr description
           Alpha multiplier applied to the base color. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:alpha
        */
        public static final int ColorStateListItem_alpha = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#alpha}
          attribute's value can be found in the {@link #ColorStateListItem} array.
          @attr name android:alpha
        */
        public static final int ColorStateListItem_android_alpha = 1;
        /**
          <p>
          @attr description
           Base color for this state. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#color}.
          @attr name android:color
        */
        public static final int ColorStateListItem_android_color = 0;
        /** Attributes that can be used with a FontFamily.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FontFamily_fontProviderAuthority com.lllslll.blueplayer_mk2:fontProviderAuthority}</code></td><td> The authority of the Font Provider to be used for the request.</td></tr>
           <tr><td><code>{@link #FontFamily_fontProviderCerts com.lllslll.blueplayer_mk2:fontProviderCerts}</code></td><td> The sets of hashes for the certificates the provider should be signed with.</td></tr>
           <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.lllslll.blueplayer_mk2:fontProviderFetchStrategy}</code></td><td> The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
           <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.lllslll.blueplayer_mk2:fontProviderFetchTimeout}</code></td><td> The length of the timeout during fetching.</td></tr>
           <tr><td><code>{@link #FontFamily_fontProviderPackage com.lllslll.blueplayer_mk2:fontProviderPackage}</code></td><td> The package for the Font Provider to be used for the request.</td></tr>
           <tr><td><code>{@link #FontFamily_fontProviderQuery com.lllslll.blueplayer_mk2:fontProviderQuery}</code></td><td> The query to be sent over to the provider.</td></tr>
           </table>
           @see #FontFamily_fontProviderAuthority
           @see #FontFamily_fontProviderCerts
           @see #FontFamily_fontProviderFetchStrategy
           @see #FontFamily_fontProviderFetchTimeout
           @see #FontFamily_fontProviderPackage
           @see #FontFamily_fontProviderQuery
         */
        public static final int[] FontFamily = {
            0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004,
            0x7f010005, 0x7f010006
        };
        /**
          <p>
          @attr description
           The authority of the Font Provider to be used for the request. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontProviderAuthority
        */
        public static final int FontFamily_fontProviderAuthority = 0;
        /**
          <p>
          @attr description
           The sets of hashes for the certificates the provider should be signed with. This is
        used to verify the identity of the provider, and is only required if the provider is not
        part of the system image. This value may point to one list or a list of lists, where each
        individual list represents one collection of signature hashes. Refer to your font provider's
        documentation for these values. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontProviderCerts
        */
        public static final int FontFamily_fontProviderCerts = 3;
        /**
          <p>
          @attr description
           The strategy to be used when fetching font data from a font provider in XML layouts.
        This attribute is ignored when the resource is loaded from code, as it is equivalent to the
        choice of API between {@link
    androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
        {@link
    androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
        (async). 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>blocking</code></td><td>0</td><td> The blocking font fetch works as follows.
              First, check the local cache, then if the requested font is not cached, request the
              font from the provider and wait until it is finished.  You can change the length of
              the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
              default typeface will be used instead. </td></tr>
<tr><td><code>async</code></td><td>1</td><td> The async font fetch works as follows.
              First, check the local cache, then if the requeted font is not cached, trigger a
              request the font and continue with layout inflation. Once the font fetch succeeds, the
              target text view will be refreshed with the downloaded font data. The
              fontProviderFetchTimeout will be ignored if async loading is specified. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontProviderFetchStrategy
        */
        public static final int FontFamily_fontProviderFetchStrategy = 4;
        /**
          <p>
          @attr description
           The length of the timeout during fetching. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>forever</code></td><td>-1</td><td> A special value for the timeout. In this case, the blocking font fetching will not
              timeout and wait until a reply is received from the font provider. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontProviderFetchTimeout
        */
        public static final int FontFamily_fontProviderFetchTimeout = 5;
        /**
          <p>
          @attr description
           The package for the Font Provider to be used for the request. This is used to verify
        the identity of the provider. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontProviderPackage
        */
        public static final int FontFamily_fontProviderPackage = 1;
        /**
          <p>
          @attr description
           The query to be sent over to the provider. Refer to your font provider's documentation
        on the format of this string. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontProviderQuery
        */
        public static final int FontFamily_fontProviderQuery = 2;
        /** Attributes that can be used with a FontFamilyFont.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
           <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td> References to the framework attrs </td></tr>
           <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
           <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
           <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
           <tr><td><code>{@link #FontFamilyFont_font com.lllslll.blueplayer_mk2:font}</code></td><td> The reference to the font file to be used.</td></tr>
           <tr><td><code>{@link #FontFamilyFont_fontStyle com.lllslll.blueplayer_mk2:fontStyle}</code></td><td> The style of the given font file.</td></tr>
           <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.lllslll.blueplayer_mk2:fontVariationSettings}</code></td><td> The variation settings to be applied to the font.</td></tr>
           <tr><td><code>{@link #FontFamilyFont_fontWeight com.lllslll.blueplayer_mk2:fontWeight}</code></td><td> The weight of the given font file.</td></tr>
           <tr><td><code>{@link #FontFamilyFont_ttcIndex com.lllslll.blueplayer_mk2:ttcIndex}</code></td><td> The index of the font in the tcc font file.</td></tr>
           </table>
           @see #FontFamilyFont_android_font
           @see #FontFamilyFont_android_fontStyle
           @see #FontFamilyFont_android_fontVariationSettings
           @see #FontFamilyFont_android_fontWeight
           @see #FontFamilyFont_android_ttcIndex
           @see #FontFamilyFont_font
           @see #FontFamilyFont_fontStyle
           @see #FontFamilyFont_fontVariationSettings
           @see #FontFamilyFont_fontWeight
           @see #FontFamilyFont_ttcIndex
         */
        public static final int[] FontFamilyFont = {
            0x01010532, 0x01010533, 0x0101053f, 0x0101056f,
            0x01010570, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#font}
          attribute's value can be found in the {@link #FontFamilyFont} array.
          @attr name android:font
        */
        public static final int FontFamilyFont_android_font = 0;
        /**
          <p>
          @attr description
           References to the framework attrs 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#fontStyle}.
          @attr name android:fontStyle
        */
        public static final int FontFamilyFont_android_fontStyle = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
          attribute's value can be found in the {@link #FontFamilyFont} array.
          @attr name android:fontVariationSettings
        */
        public static final int FontFamilyFont_android_fontVariationSettings = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
          attribute's value can be found in the {@link #FontFamilyFont} array.
          @attr name android:fontWeight
        */
        public static final int FontFamilyFont_android_fontWeight = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
          attribute's value can be found in the {@link #FontFamilyFont} array.
          @attr name android:ttcIndex
        */
        public static final int FontFamilyFont_android_ttcIndex = 3;
        /**
          <p>
          @attr description
           The reference to the font file to be used. This should be a file in the res/font folder
         and should therefore have an R reference value. E.g. @font/myfont 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:font
        */
        public static final int FontFamilyFont_font = 6;
        /**
          <p>
          @attr description
           The style of the given font file. This will be used when the font is being loaded into
         the font stack and will override any style information in the font's header tables. If
         unspecified, the value in the font's header tables will be used. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>italic</code></td><td>1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontStyle
        */
        public static final int FontFamilyFont_fontStyle = 5;
        /**
          <p>
          @attr description
           The variation settings to be applied to the font. The string should be in the following
         format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
         used, or the font used does not support variation settings, this attribute needs not be
         specified. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontVariationSettings
        */
        public static final int FontFamilyFont_fontVariationSettings = 8;
        /**
          <p>
          @attr description
           The weight of the given font file. This will be used when the font is being loaded into
         the font stack and will override any weight information in the font's header tables. Must
         be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
         common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
         in the font's header tables will be used. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:fontWeight
        */
        public static final int FontFamilyFont_fontWeight = 7;
        /**
          <p>
          @attr description
           The index of the font in the tcc font file. If the font file referenced is not in the
        tcc format, this attribute needs not be specified. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.lllslll.blueplayer_mk2:ttcIndex
        */
        public static final int FontFamilyFont_ttcIndex = 9;
        /** Attributes that can be used with a GradientColor.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td> Optional center color.</td></tr>
           <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td> Only applied to SweepGradient / RadialGradient
 X coordinate of the center of the gradient within the path.</td></tr>
           <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td> Y coordinate of the center of the gradient within the path.</td></tr>
           <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td> End color of the gradient.</td></tr>
           <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td> X coordinate of the end point origin of the gradient.</td></tr>
           <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td> Y coordinate of the end point of the gradient within the shape.</td></tr>
           <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td> Only applied to RadialGradient
 Radius of the gradient, used only with radial gradient.</td></tr>
           <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td> Start color of the gradient.</td></tr>
           <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td> LinearGradient specific 
 X coordinate of the start point origin of the gradient.</td></tr>
           <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td> Y coordinate of the start point of the gradient within the shape.</td></tr>
           <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td> Defines the tile mode of the gradient.</td></tr>
           <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td> Type of gradient.</td></tr>
           </table>
           @see #GradientColor_android_centerColor
           @see #GradientColor_android_centerX
           @see #GradientColor_android_centerY
           @see #GradientColor_android_endColor
           @see #GradientColor_android_endX
           @see #GradientColor_android_endY
           @see #GradientColor_android_gradientRadius
           @see #GradientColor_android_startColor
           @see #GradientColor_android_startX
           @see #GradientColor_android_startY
           @see #GradientColor_android_tileMode
           @see #GradientColor_android_type
         */
        public static final int[] GradientColor = {
            0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2,
            0x010101a3, 0x010101a4, 0x01010201, 0x0101020b,
            0x01010510, 0x01010511, 0x01010512, 0x01010513
        };
        /**
          <p>
          @attr description
           Optional center color. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#centerColor}.
          @attr name android:centerColor
        */
        public static final int GradientColor_android_centerColor = 7;
        /**
          <p>
          @attr description
           Only applied to SweepGradient / RadialGradient
 X coordinate of the center of the gradient within the path. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#centerX}.
          @attr name android:centerX
        */
        public static final int GradientColor_android_centerX = 3;
        /**
          <p>
          @attr description
           Y coordinate of the center of the gradient within the path. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#centerY}.
          @attr name android:centerY
        */
        public static final int GradientColor_android_centerY = 4;
        /**
          <p>
          @attr description
           End color of the gradient. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#endColor}.
          @attr name android:endColor
        */
        public static final int GradientColor_android_endColor = 1;
        /**
          <p>
          @attr description
           X coordinate of the end point origin of the gradient.
             Defined in same coordinates as the path itself 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#endX}.
          @attr name android:endX
        */
        public static final int GradientColor_android_endX = 10;
        /**
          <p>
          @attr description
           Y coordinate of the end point of the gradient within the shape.
             Defined in same coordinates as the path itself 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#endY}.
          @attr name android:endY
        */
        public static final int GradientColor_android_endY = 11;
        /**
          <p>
          @attr description
           Only applied to RadialGradient
 Radius of the gradient, used only with radial gradient. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#gradientRadius}.
          @attr name android:gradientRadius
        */
        public static final int GradientColor_android_gradientRadius = 5;
        /**
          <p>
          @attr description
           Start color of the gradient. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#startColor}.
          @attr name android:startColor
        */
        public static final int GradientColor_android_startColor = 0;
        /**
          <p>
          @attr description
           LinearGradient specific 
 X coordinate of the start point origin of the gradient.
             Defined in same coordinates as the path itself 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#startX}.
          @attr name android:startX
        */
        public static final int GradientColor_android_startX = 8;
        /**
          <p>
          @attr description
           Y coordinate of the start point of the gradient within the shape.
             Defined in same coordinates as the path itself 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#startY}.
          @attr name android:startY
        */
        public static final int GradientColor_android_startY = 9;
        /**
          <p>
          @attr description
           Defines the tile mode of the gradient. SweepGradient doesn't support tiling. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#tileMode}.
          @attr name android:tileMode
        */
        public static final int GradientColor_android_tileMode = 6;
        /**
          <p>
          @attr description
           Type of gradient. The default type is linear. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#type}.
          @attr name android:type
        */
        public static final int GradientColor_android_type = 2;
        /** Attributes that can be used with a GradientColorItem.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td> The current color for the offset inside the gradient.</td></tr>
           <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td> The offset (or ratio) of this current color item inside the gradient.</td></tr>
           </table>
           @see #GradientColorItem_android_color
           @see #GradientColorItem_android_offset
         */
        public static final int[] GradientColorItem = {
            0x010101a5, 0x01010514
        };
        /**
          <p>
          @attr description
           The current color for the offset inside the gradient. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#color}.
          @attr name android:color
        */
        public static final int GradientColorItem_android_color = 0;
        /**
          <p>
          @attr description
           The offset (or ratio) of this current color item inside the gradient.
             The value is only meaningful when it is between 0 and 1. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#offset}.
          @attr name android:offset
        */
        public static final int GradientColorItem_android_offset = 1;
    };
}
